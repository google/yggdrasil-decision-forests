
<style>

.tab_block .header {
    flex-direction: row;
    display: flex;
}

.tab_block .header .tab {
    cursor: pointer;
    background-color: #F6F5F5;
    text-decoration: none;
    text-align: center;
    padding: 4px 12px;
    color: black;
}

.tab_block .header .tab.selected {
    border-bottom: 2px solid #2F80ED;
}

.tab_block .header .tab:hover {
    text-decoration: none;
    background-color: #DCDCDC;
}

.tab_block .body .tab_content {
    display: none;
    padding: 5px;
}

.tab_block .body .tab_content.selected {
    display: block;
}

.ydf_pre {
    font-size: medium;
}



.variable_importance {
}

.variable_importance select {
}

.variable_importance .content {
  display: none;
}

.variable_importance .content.selected {
  display: block;
}

.ydf_tuning_table {
  border-collapse: collapse;
  border: 1px solid lightgray;
}

.ydf_tuning_table th {
  background-color: #ededed;
  font-weight: bold;
  text-align: left;
  padding: 3px 4px;
  border: 1px solid lightgray;
}

.ydf_tuning_table td {
  text-align: right;
  padding: 3px 4px;
  border: 1px solid lightgray;
}

.ydf_tuning_table .best {
  background-color: khaki;
}

</style>

<script>

function ydfShowTab(block_id, item) {
    const block = document.getElementById(block_id);
    
    
    console.log("HIDE first of:",block.getElementsByClassName("tab selected"));
    console.log("HIDE first of:",block.getElementsByClassName("tab_content selected"));
    
    block.getElementsByClassName("tab selected")[0].classList.remove("selected");
    block.getElementsByClassName("tab_content selected")[0].classList.remove("selected");
    document.getElementById(block_id + "_" + item).classList.add("selected");
    document.getElementById(block_id + "_body_" + item).classList.add("selected");
}
  

function ydfShowVariableImportance(block_id) {
    const block = document.getElementById(block_id);
    const item = block.getElementsByTagName("select")[0].value;
    block.getElementsByClassName("content selected")[0].classList.remove("selected");
    document.getElementById(block_id + "_body_" + item).classList.add("selected");
}

</script>
  <div class="tab_block" id="my_report"><div class="header"><a id="my_report_setup" class="tab selected" onclick="ydfShowTab('my_report', 'setup')">Setup</a><a id="my_report_dataset" class="tab" onclick="ydfShowTab('my_report', 'dataset')">Dataset</a><a id="my_report_pdp" class="tab" onclick="ydfShowTab('my_report', 'pdp')">Partial Dependence Plot</a><a id="my_report_cep" class="tab" onclick="ydfShowTab('my_report', 'cep')">Conditional Expectation Plot</a><a id="my_report_model" class="tab" onclick="ydfShowTab('my_report', 'model')">Model Description</a></div><div class="body"><div id="my_report_body_setup" class="tab_content selected"><p><b>Analyse dataset: </b>MODEL_PATH</p><p><b>Model: </b>DATASET_PATH</p></div><div id="my_report_body_dataset" class="tab_content"><pre>Number of records: 2
Number of columns: 2

Number of columns by type:
	NUMERICAL: 2 (100%)

Columns:

NUMERICAL: 2 (100%)
	0: &quot;features.0_of_2&quot; NUMERICAL mean:0 min:0 max:0 sd:0 dtype:DTYPE_FLOAT64
	1: &quot;features.1_of_2&quot; NUMERICAL mean:0 min:0 max:0 sd:0 dtype:DTYPE_FLOAT64

Terminology:
	nas: Number of non-available (i.e. missing) values.
	ood: Out of dictionary.
	manually-defined: Attribute whose type is manually defined by the user, i.e., the type was not automatically inferred.
	tokenized: The attribute value is obtained through tokenization.
	has-dict: The attribute is attached to a string dictionary e.g. a categorical attribute stored as a string.
	vocab-size: Number of unique values.
</pre></div><div id="my_report_body_pdp" class="tab_content"><div style='display: grid; gap: 0px; grid-auto-columns: min-content;'><div style='grid-row:1 / span 1; grid-column:1 / span 1;'><script src='https://www.gstatic.com/external_hosted/plotly/plotly.min.js'></script>
<div id="chart_my_report_pdp_item0" style="display: inline-block;" ></div>
<script>
  Plotly.newPlot(
    'chart_my_report_pdp_item0',
    [{
x: [-3.39717,-2.70882,-2.53712,-2.41202,-2.31581,-2.26782,-2.23348,-2.18464,-2.14217,-2.11887,-2.09398,-2.06955,-2.0465,-2.01609,-1.98743,-1.94635,-1.89922,-1.87348,-1.85676,-1.83123,-1.78885,-1.75275,-1.69403,-1.55554,-1.35773,-1.01537,-0.0431085,1.10311,1.55923,1.6442,1.70515,1.75839,1.80942,1.85063,1.89766,1.94116,1.975,2.00907,2.04311,2.08108,2.12511,2.16209,2.20728,2.25312,2.29385,2.33042,2.39023,2.53455,2.74057,3.36834],
y: [0.632195,0.572264,0.547049,0.535173,0.525063,0.519984,0.516842,0.51456,0.513099,0.512942,0.512845,0.510351,0.511018,0.512634,0.513154,0.510815,0.512603,0.511296,0.512676,0.510554,0.511901,0.513185,0.518174,0.532992,0.547854,0.56005,0.571053,0.56038,0.523025,0.508881,0.505345,0.498934,0.496253,0.496768,0.498925,0.498104,0.499394,0.500182,0.50141,0.498714,0.502388,0.505024,0.507792,0.513791,0.515627,0.520658,0.529384,0.557438,0.571702,0.629966],
type: 'scatter',
mode: 'lines',
line: {
  dash: 'solid',
  width: 1
},
},
],
    {
      width: 530,
      height: 450,
      title: 'features.0_of_2',
      showlegend: true,
      xaxis: {
        ticks: 'outside',
        showgrid: true,
        zeroline: false,
        showline: true,
        title: 'features.0_of_2',
        },
      font: {
        size: 10,
        },
      yaxis: {
        ticks: 'outside',
        showgrid: true,
        zeroline: false,
        showline: true,
        title: 'Prediction',
        },
      margin: {
        l: 50,
        r: 50,
        b: 50,
        t: 50,
      },
    },
    {
      modeBarButtonsToRemove: ['sendDataToCloud'],
      displaylogo: false,displayModeBar: false,
    }
  );
</script>
</div><div style='grid-row:2 / span 1; grid-column:1 / span 1;'>
<div id="chart_my_report_pdp_item1" style="display: inline-block;" ></div>
<script>
  Plotly.newPlot(
    'chart_my_report_pdp_item1',
    [{
x: [-3.39717,-2.70882,-2.53712,-2.41202,-2.31581,-2.26782,-2.23348,-2.18464,-2.14217,-2.11887,-2.09398,-2.06955,-2.0465,-2.01609,-1.98743,-1.94635,-1.89922,-1.87348,-1.85676,-1.83123,-1.78885,-1.75275,-1.69403,-1.55554,-1.35773,-1.01537,-0.0431085,1.10311,1.55923,1.6442,1.70515,1.75839,1.80942,1.85063,1.89766,1.94116,1.975,2.00907,2.04311,2.08108,2.12511,2.16209,2.20728,2.25312,2.29385,2.33042,2.39023,2.53455,2.74057,3.36834],
y: [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
type: 'scatter',
mode: 'lines',
line: {
  dash: 'solid',
  width: 1
},
name: 'density',
},
{
x: [-3.39717,-3.39717,-2.70882,-2.53712,-2.41202,-2.31581,-2.26782,-2.23348,-2.18464,-2.14217,-2.11887,-2.09398,-2.06955,-2.0465,-2.01609,-1.98743,-1.94635,-1.89922,-1.87348,-1.85676,-1.83123,-1.78885,-1.75275,-1.69403,-1.55554,-1.35773,-1.01537,-0.0431085,1.10311,1.55923,1.6442,1.70515,1.75839,1.80942,1.85063,1.89766,1.94116,1.975,2.00907,2.04311,2.08108,2.12511,2.16209,2.20728,2.25312,2.29385,2.33042,2.39023,2.53455,2.74057,3.36834],
y: [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
type: 'scatter',
mode: 'lines',
line: {
  dash: 'dot',
  width: 1
},
name: 'cdf',
},
],
    {
      width: 530,
      height: 450,
      title: 'features.0_of_2',
      showlegend: true,
      xaxis: {
        ticks: 'outside',
        showgrid: true,
        zeroline: false,
        showline: true,
        title: 'features.0_of_2',
        },
      font: {
        size: 10,
        },
      yaxis: {
        ticks: 'outside',
        showgrid: true,
        zeroline: false,
        showline: true,
        title: 'Distribution',
        },
      margin: {
        l: 50,
        r: 50,
        b: 50,
        t: 50,
      },
    },
    {
      modeBarButtonsToRemove: ['sendDataToCloud'],
      displaylogo: false,displayModeBar: false,
    }
  );
</script>
</div><div style='grid-row:1 / span 1; grid-column:2 / span 1;'>
<div id="chart_my_report_pdp_item2" style="display: inline-block;" ></div>
<script>
  Plotly.newPlot(
    'chart_my_report_pdp_item2',
    [{
x: [-3.61928,-2.95009,-2.57525,-2.47513,-2.37239,-2.28705,-2.24851,-2.22257,-2.1961,-2.16999,-2.14416,-2.11168,-2.0726,-2.0427,-2.01881,-1.99053,-1.94145,-1.89858,-1.85499,-1.79697,-1.74851,-1.70936,-1.67937,-1.64361,-1.57489,-1.47795,-0.551131,0.95747,1.6445,1.74917,1.81502,1.84651,1.87236,1.89816,1.924,1.94744,1.96734,1.98273,1.99242,2.0057,2.02984,2.05997,2.08548,2.09927,2.11968,2.15428,2.18603,2.23056,2.30428,3.12256],
y: [0.649311,0.6095,0.582123,0.570127,0.565343,0.557381,0.553617,0.55164,0.550223,0.548128,0.544635,0.543363,0.542323,0.540076,0.538679,0.538785,0.53836,0.538462,0.54065,0.540597,0.542294,0.546018,0.55084,0.554919,0.561935,0.569697,0.604808,0.597498,0.557098,0.545347,0.531385,0.527455,0.524796,0.5191,0.518465,0.51632,0.514576,0.514609,0.515094,0.513796,0.513314,0.514652,0.515855,0.516503,0.517303,0.518834,0.523773,0.532386,0.541908,0.619623],
type: 'scatter',
mode: 'lines',
line: {
  dash: 'solid',
  width: 1
},
},
],
    {
      width: 530,
      height: 450,
      title: 'features.1_of_2',
      showlegend: true,
      xaxis: {
        ticks: 'outside',
        showgrid: true,
        zeroline: false,
        showline: true,
        title: 'features.1_of_2',
        },
      font: {
        size: 10,
        },
      yaxis: {
        ticks: 'outside',
        showgrid: true,
        zeroline: false,
        showline: true,
        title: 'Prediction',
        },
      margin: {
        l: 50,
        r: 50,
        b: 50,
        t: 50,
      },
    },
    {
      modeBarButtonsToRemove: ['sendDataToCloud'],
      displaylogo: false,displayModeBar: false,
    }
  );
</script>
</div><div style='grid-row:2 / span 1; grid-column:2 / span 1;'>
<div id="chart_my_report_pdp_item3" style="display: inline-block;" ></div>
<script>
  Plotly.newPlot(
    'chart_my_report_pdp_item3',
    [{
x: [-3.61928,-2.95009,-2.57525,-2.47513,-2.37239,-2.28705,-2.24851,-2.22257,-2.1961,-2.16999,-2.14416,-2.11168,-2.0726,-2.0427,-2.01881,-1.99053,-1.94145,-1.89858,-1.85499,-1.79697,-1.74851,-1.70936,-1.67937,-1.64361,-1.57489,-1.47795,-0.551131,0.95747,1.6445,1.74917,1.81502,1.84651,1.87236,1.89816,1.924,1.94744,1.96734,1.98273,1.99242,2.0057,2.02984,2.05997,2.08548,2.09927,2.11968,2.15428,2.18603,2.23056,2.30428,3.12256],
y: [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
type: 'scatter',
mode: 'lines',
line: {
  dash: 'solid',
  width: 1
},
name: 'density',
},
{
x: [-3.61928,-3.61928,-2.95009,-2.57525,-2.47513,-2.37239,-2.28705,-2.24851,-2.22257,-2.1961,-2.16999,-2.14416,-2.11168,-2.0726,-2.0427,-2.01881,-1.99053,-1.94145,-1.89858,-1.85499,-1.79697,-1.74851,-1.70936,-1.67937,-1.64361,-1.57489,-1.47795,-0.551131,0.95747,1.6445,1.74917,1.81502,1.84651,1.87236,1.89816,1.924,1.94744,1.96734,1.98273,1.99242,2.0057,2.02984,2.05997,2.08548,2.09927,2.11968,2.15428,2.18603,2.23056,2.30428,3.12256],
y: [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
type: 'scatter',
mode: 'lines',
line: {
  dash: 'dot',
  width: 1
},
name: 'cdf',
},
],
    {
      width: 530,
      height: 450,
      title: 'features.1_of_2',
      showlegend: true,
      xaxis: {
        ticks: 'outside',
        showgrid: true,
        zeroline: false,
        showline: true,
        title: 'features.1_of_2',
        },
      font: {
        size: 10,
        },
      yaxis: {
        ticks: 'outside',
        showgrid: true,
        zeroline: false,
        showline: true,
        title: 'Distribution',
        },
      margin: {
        l: 50,
        r: 50,
        b: 50,
        t: 50,
      },
    },
    {
      modeBarButtonsToRemove: ['sendDataToCloud'],
      displaylogo: false,displayModeBar: false,
    }
  );
</script>
</div></div></div><div id="my_report_body_cep" class="tab_content"><div style='display: grid; gap: 0px; grid-auto-columns: min-content;'><div style='grid-row:1 / span 1; grid-column:1 / span 1;'><script src='https://www.gstatic.com/external_hosted/plotly/plotly.min.js'></script>
<div id="chart_my_report_cep_item0" style="display: inline-block;" ></div>
<script>
  Plotly.newPlot(
    'chart_my_report_cep_item0',
    [{
x: [-3.39717,-2.70882,-2.53712,-2.41202,-2.31581,-2.26782,-2.23348,-2.18464,-2.14217,-2.11887,-2.09398,-2.06955,-2.0465,-2.01609,-1.98743,-1.94635,-1.89922,-1.87348,-1.85676,-1.83123,-1.78885,-1.75275,-1.69403,-1.55554,-1.35773,-1.01537,-0.0431085,1.10311,1.55923,1.6442,1.70515,1.75839,1.80942,1.85063,1.89766,1.94116,1.975,2.00907,2.04311,2.08108,2.12511,2.16209,2.20728,2.25312,2.29385,2.33042,2.39023,2.53455,2.74057,3.36834],
y: [0.454095,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
type: 'scatter',
mode: 'lines',
line: {
  dash: 'solid',
  width: 1
},
},
],
    {
      width: 530,
      height: 450,
      title: 'features.0_of_2',
      showlegend: true,
      xaxis: {
        ticks: 'outside',
        showgrid: true,
        zeroline: false,
        showline: true,
        title: 'features.0_of_2',
        },
      font: {
        size: 10,
        },
      yaxis: {
        ticks: 'outside',
        showgrid: true,
        zeroline: false,
        showline: true,
        title: 'Prediction',
        },
      margin: {
        l: 50,
        r: 50,
        b: 50,
        t: 50,
      },
    },
    {
      modeBarButtonsToRemove: ['sendDataToCloud'],
      displaylogo: false,displayModeBar: false,
    }
  );
</script>
</div><div style='grid-row:2 / span 1; grid-column:1 / span 1;'>
<div id="chart_my_report_cep_item1" style="display: inline-block;" ></div>
<script>
  Plotly.newPlot(
    'chart_my_report_cep_item1',
    [{
x: [-3.39717,-2.70882,-2.53712,-2.41202,-2.31581,-2.26782,-2.23348,-2.18464,-2.14217,-2.11887,-2.09398,-2.06955,-2.0465,-2.01609,-1.98743,-1.94635,-1.89922,-1.87348,-1.85676,-1.83123,-1.78885,-1.75275,-1.69403,-1.55554,-1.35773,-1.01537,-0.0431085,1.10311,1.55923,1.6442,1.70515,1.75839,1.80942,1.85063,1.89766,1.94116,1.975,2.00907,2.04311,2.08108,2.12511,2.16209,2.20728,2.25312,2.29385,2.33042,2.39023,2.53455,2.74057,3.36834],
y: [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
type: 'scatter',
mode: 'lines',
line: {
  dash: 'solid',
  width: 1
},
name: 'density',
},
{
x: [-3.39717,-3.39717,-2.70882,-2.53712,-2.41202,-2.31581,-2.26782,-2.23348,-2.18464,-2.14217,-2.11887,-2.09398,-2.06955,-2.0465,-2.01609,-1.98743,-1.94635,-1.89922,-1.87348,-1.85676,-1.83123,-1.78885,-1.75275,-1.69403,-1.55554,-1.35773,-1.01537,-0.0431085,1.10311,1.55923,1.6442,1.70515,1.75839,1.80942,1.85063,1.89766,1.94116,1.975,2.00907,2.04311,2.08108,2.12511,2.16209,2.20728,2.25312,2.29385,2.33042,2.39023,2.53455,2.74057,3.36834],
y: [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
type: 'scatter',
mode: 'lines',
line: {
  dash: 'dot',
  width: 1
},
name: 'cdf',
},
],
    {
      width: 530,
      height: 450,
      title: 'features.0_of_2',
      showlegend: true,
      xaxis: {
        ticks: 'outside',
        showgrid: true,
        zeroline: false,
        showline: true,
        title: 'features.0_of_2',
        },
      font: {
        size: 10,
        },
      yaxis: {
        ticks: 'outside',
        showgrid: true,
        zeroline: false,
        showline: true,
        title: 'Distribution',
        },
      margin: {
        l: 50,
        r: 50,
        b: 50,
        t: 50,
      },
    },
    {
      modeBarButtonsToRemove: ['sendDataToCloud'],
      displaylogo: false,displayModeBar: false,
    }
  );
</script>
</div><div style='grid-row:1 / span 1; grid-column:2 / span 1;'>
<div id="chart_my_report_cep_item2" style="display: inline-block;" ></div>
<script>
  Plotly.newPlot(
    'chart_my_report_cep_item2',
    [{
x: [-3.61928,-2.95009,-2.57525,-2.47513,-2.37239,-2.28705,-2.24851,-2.22257,-2.1961,-2.16999,-2.14416,-2.11168,-2.0726,-2.0427,-2.01881,-1.99053,-1.94145,-1.89858,-1.85499,-1.79697,-1.74851,-1.70936,-1.67937,-1.64361,-1.57489,-1.47795,-0.551131,0.95747,1.6445,1.74917,1.81502,1.84651,1.87236,1.89816,1.924,1.94744,1.96734,1.98273,1.99242,2.0057,2.02984,2.05997,2.08548,2.09927,2.11968,2.15428,2.18603,2.23056,2.30428,3.12256],
y: [0.454095,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
type: 'scatter',
mode: 'lines',
line: {
  dash: 'solid',
  width: 1
},
},
],
    {
      width: 530,
      height: 450,
      title: 'features.1_of_2',
      showlegend: true,
      xaxis: {
        ticks: 'outside',
        showgrid: true,
        zeroline: false,
        showline: true,
        title: 'features.1_of_2',
        },
      font: {
        size: 10,
        },
      yaxis: {
        ticks: 'outside',
        showgrid: true,
        zeroline: false,
        showline: true,
        title: 'Prediction',
        },
      margin: {
        l: 50,
        r: 50,
        b: 50,
        t: 50,
      },
    },
    {
      modeBarButtonsToRemove: ['sendDataToCloud'],
      displaylogo: false,displayModeBar: false,
    }
  );
</script>
</div><div style='grid-row:2 / span 1; grid-column:2 / span 1;'>
<div id="chart_my_report_cep_item3" style="display: inline-block;" ></div>
<script>
  Plotly.newPlot(
    'chart_my_report_cep_item3',
    [{
x: [-3.61928,-2.95009,-2.57525,-2.47513,-2.37239,-2.28705,-2.24851,-2.22257,-2.1961,-2.16999,-2.14416,-2.11168,-2.0726,-2.0427,-2.01881,-1.99053,-1.94145,-1.89858,-1.85499,-1.79697,-1.74851,-1.70936,-1.67937,-1.64361,-1.57489,-1.47795,-0.551131,0.95747,1.6445,1.74917,1.81502,1.84651,1.87236,1.89816,1.924,1.94744,1.96734,1.98273,1.99242,2.0057,2.02984,2.05997,2.08548,2.09927,2.11968,2.15428,2.18603,2.23056,2.30428,3.12256],
y: [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
type: 'scatter',
mode: 'lines',
line: {
  dash: 'solid',
  width: 1
},
name: 'density',
},
{
x: [-3.61928,-3.61928,-2.95009,-2.57525,-2.47513,-2.37239,-2.28705,-2.24851,-2.22257,-2.1961,-2.16999,-2.14416,-2.11168,-2.0726,-2.0427,-2.01881,-1.99053,-1.94145,-1.89858,-1.85499,-1.79697,-1.74851,-1.70936,-1.67937,-1.64361,-1.57489,-1.47795,-0.551131,0.95747,1.6445,1.74917,1.81502,1.84651,1.87236,1.89816,1.924,1.94744,1.96734,1.98273,1.99242,2.0057,2.02984,2.05997,2.08548,2.09927,2.11968,2.15428,2.18603,2.23056,2.30428,3.12256],
y: [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
type: 'scatter',
mode: 'lines',
line: {
  dash: 'dot',
  width: 1
},
name: 'cdf',
},
],
    {
      width: 530,
      height: 450,
      title: 'features.1_of_2',
      showlegend: true,
      xaxis: {
        ticks: 'outside',
        showgrid: true,
        zeroline: false,
        showline: true,
        title: 'features.1_of_2',
        },
      font: {
        size: 10,
        },
      yaxis: {
        ticks: 'outside',
        showgrid: true,
        zeroline: false,
        showline: true,
        title: 'Distribution',
        },
      margin: {
        l: 50,
        r: 50,
        b: 50,
        t: 50,
      },
    },
    {
      modeBarButtonsToRemove: ['sendDataToCloud'],
      displaylogo: false,displayModeBar: false,
    }
  );
</script>
</div></div></div><div id="my_report_body_model" class="tab_content"><pre>Type: &quot;ISOLATION_FOREST&quot;
Task: ANOMALY_DETECTION

Input Features (2):
	features.0_of_2
	features.1_of_2

No weights

Variable Importance: MEAN_PARTITION_SCORE:

Variable Importance: NUM_NODES:
    1. &quot;features.0_of_2&quot; 1617.000000 ################
    2. &quot;features.1_of_2&quot; 1577.000000 


Cannot compute model self evaluation:This model does not support evaluation reports.

Number of trees: 100
Total number of nodes: 6488

Number of nodes by tree:
Count: 100 Average: 64.88 StdDev: 15.1758
Min: 33 Max: 101 Ignored: 0
----------------------------------------------
[  33,  36)  1   1.00%   1.00% #
[  36,  39)  1   1.00%   2.00% #
[  39,  43)  4   4.00%   6.00% ###
[  43,  46)  6   6.00%  12.00% ####
[  46,  50)  4   4.00%  16.00% ###
[  50,  53)  2   2.00%  18.00% #
[  53,  57) 11  11.00%  29.00% ########
[  57,  60)  9   9.00%  38.00% ######
[  60,  64) 14  14.00%  52.00% ##########
[  64,  67)  8   8.00%  60.00% ######
[  67,  70)  5   5.00%  65.00% ####
[  70,  74) 11  11.00%  76.00% ########
[  74,  77)  4   4.00%  80.00% ###
[  77,  81)  3   3.00%  83.00% ##
[  81,  84)  4   4.00%  87.00% ###
[  84,  88)  4   4.00%  91.00% ###
[  88,  91)  2   2.00%  93.00% #
[  91,  95)  3   3.00%  96.00% ##
[  95,  98)  0   0.00%  96.00%
[  98, 101]  4   4.00% 100.00% ###

Depth by leafs:
Count: 3294 Average: 5.92077 StdDev: 1.37529
Min: 1 Max: 7 Ignored: 0
----------------------------------------------
[ 1, 2)   13   0.39%   0.39%
[ 2, 3)   56   1.70%   2.09%
[ 3, 4)  189   5.74%   7.83% #
[ 4, 5)  308   9.35%  17.18% ##
[ 5, 6)  443  13.45%  30.63% ###
[ 6, 7)  631  19.16%  49.79% ####
[ 7, 7] 1654  50.21% 100.00% ##########

Number of training obs by leaf:
Count: 3294 Average: 0 StdDev: 0
Min: 0 Max: 0 Ignored: 0
----------------------------------------------
[ 0, 0] 3294 100.00% 100.00% ##########

Attribute in nodes:
	1617 : features.0_of_2 [NUMERICAL]
	1577 : features.1_of_2 [NUMERICAL]

Attribute in nodes with depth &lt;= 0:
	61 : features.0_of_2 [NUMERICAL]
	39 : features.1_of_2 [NUMERICAL]

Attribute in nodes with depth &lt;= 1:
	148 : features.0_of_2 [NUMERICAL]
	139 : features.1_of_2 [NUMERICAL]

Attribute in nodes with depth &lt;= 2:
	311 : features.0_of_2 [NUMERICAL]
	294 : features.1_of_2 [NUMERICAL]

Attribute in nodes with depth &lt;= 3:
	534 : features.0_of_2 [NUMERICAL]
	518 : features.1_of_2 [NUMERICAL]

Attribute in nodes with depth &lt;= 5:
	1206 : features.0_of_2 [NUMERICAL]
	1161 : features.1_of_2 [NUMERICAL]

Condition type in nodes:
	3194 : HigherCondition
Condition type in nodes with depth &lt;= 0:
	100 : HigherCondition
Condition type in nodes with depth &lt;= 1:
	287 : HigherCondition
Condition type in nodes with depth &lt;= 2:
	605 : HigherCondition
Condition type in nodes with depth &lt;= 3:
	1052 : HigherCondition
Condition type in nodes with depth &lt;= 5:
	2367 : HigherCondition
Node format: BLOB_SEQUENCE
Number of examples per tree: 100
</pre></div></div></div>