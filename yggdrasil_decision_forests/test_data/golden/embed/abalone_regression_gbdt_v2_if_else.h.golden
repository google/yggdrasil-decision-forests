#ifndef YDF_MODEL_YDF_MODEL_H_
#define YDF_MODEL_YDF_MODEL_H_

#include <stdint.h>
#include <cstring>
#include <array>
#include <algorithm>
#include <bitset>
#include <cassert>

namespace ydf_model {

enum class FeatureType : uint32_t {
  kOutOfVocabulary = 0,
  kM = 1,
  kI = 2,
  kF = 3,
};

constexpr const int kNumFeatures = 8;
constexpr const int kNumTrees = 3;

struct Instance {
  typedef float Numerical;

  FeatureType type;
  Numerical longestshell;
  Numerical diameter;
  Numerical height;
  Numerical wholeweight;
  Numerical shuckedweight;
  Numerical visceraweight;
  Numerical shellweight;
};

inline float Predict(const Instance& instance) {
  float accumulator {9.94246};
  // Tree #0
  if (instance.shellweight >= 0.16775) {
    if (instance.shellweight >= 0.35975) {
      if (instance.shuckedweight >= 0.552) {
        if (instance.shellweight >= 0.56875) {
          if (instance.shuckedweight >= 0.77) {
            accumulator += 0.312421;
          } else {
            accumulator += 0.705754;
          }
        } else {
          if (instance.shellweight >= 0.4445) {
            accumulator += 0.227469;
          } else {
            accumulator += 0.108071;
          }
        }
      } else {
        if (instance.shellweight >= 0.5075) {
          if (instance.diameter >= 0.495) {
            accumulator += 0.680754;
          } else {
            accumulator += 1.04861;
          }
        } else {
          if (instance.shuckedweight >= 0.41475) {
            accumulator += 0.323402;
          } else {
            accumulator += 0.580223;
          }
        }
      }
    } else {
      if (instance.shellweight >= 0.24925) {
        if (instance.shuckedweight >= 0.39975) {
          if (instance.shellweight >= 0.29375) {
            accumulator += 0.0718944;
          } else {
            accumulator += -0.0212617;
          }
        } else {
          if (instance.shuckedweight >= 0.34475) {
            accumulator += 0.184504;
          } else {
            accumulator += 0.334164;
          }
        }
      } else {
        if (instance.shuckedweight >= 0.30025) {
          if (instance.shuckedweight >= 0.37975) {
            accumulator += -0.111661;
          } else {
            accumulator += -0.0446622;
          }
        } else {
          if (instance.type == FeatureType::kOutOfVocabulary ||
              instance.type == FeatureType::kM ||
              instance.type == FeatureType::kF) {
            accumulator += 0.173916;
          } else {
            accumulator += -0.02731;
          }
        }
      }
    }
  } else {
    if (instance.shellweight >= 0.05875) {
      if (instance.type == FeatureType::kOutOfVocabulary ||
          instance.type == FeatureType::kM ||
          instance.type == FeatureType::kF) {
        if (instance.shuckedweight >= 0.22975) {
          if (instance.visceraweight >= 0.1685) {
            accumulator += -0.0275789;
          } else {
            accumulator += -0.211129;
          }
        } else {
          if (instance.height >= 0.1225) {
            accumulator += 0.0376989;
          } else {
            accumulator += -0.0900595;
          }
        }
      } else {
        if (instance.shellweight >= 0.112) {
          if (instance.shuckedweight >= 0.217) {
            accumulator += -0.216028;
          } else {
            accumulator += -0.117735;
          }
        } else {
          if (instance.shuckedweight >= 0.09575) {
            accumulator += -0.295431;
          } else {
            accumulator += -0.244246;
          }
        }
      }
    } else {
      if (instance.shellweight >= 0.0265) {
        if (instance.diameter >= 0.2225) {
          if (instance.type == FeatureType::kOutOfVocabulary ||
              instance.type == FeatureType::kM) {
            accumulator += -0.188982;
          } else {
            accumulator += -0.351388;
          }
        } else {
          if (instance.height >= 0.0625) {
            accumulator += -0.405056;
          } else {
            accumulator += -0.471169;
          }
        }
      } else {
        if (instance.visceraweight >= 0.01025) {
          if (instance.shellweight >= 0.0175) {
            accumulator += -0.484489;
          } else {
            accumulator += -0.541304;
          }
        } else {
          if (instance.shuckedweight >= 0.00725) {
            accumulator += -0.575641;
          } else {
            accumulator += -0.678861;
          }
        }
      }
    }
  }

  // Tree #1
  if (instance.shellweight >= 0.16775) {
    if (instance.shellweight >= 0.37475) {
      if (instance.shuckedweight >= 0.552) {
        if (instance.shellweight >= 0.69275) {
          if (instance.diameter >= 0.5425) {
            accumulator += 0.604846;
          } else {
            accumulator += 1.07518;
          }
        } else {
          if (instance.shellweight >= 0.4445) {
            accumulator += 0.2356;
          } else {
            accumulator += 0.104998;
          }
        }
      } else {
        if (instance.wholeweight >= 1.40125) {
          if (instance.height >= 0.1775) {
            accumulator += 0.777669;
          } else {
            accumulator += 0.443813;
          }
        } else {
          if (instance.shuckedweight >= 0.415) {
            accumulator += 0.295249;
          } else {
            accumulator += 0.626055;
          }
        }
      }
    } else {
      if (instance.shellweight >= 0.24925) {
        if (instance.shuckedweight >= 0.44375) {
          if (instance.shellweight >= 0.2905) {
            accumulator += 0.0440641;
          } else {
            accumulator += -0.0460116;
          }
        } else {
          if (instance.shellweight >= 0.28975) {
            accumulator += 0.300157;
          } else {
            accumulator += 0.147129;
          }
        }
      } else {
        if (instance.shuckedweight >= 0.24325) {
          if (instance.shuckedweight >= 0.30025) {
            accumulator += -0.0658736;
          } else {
            accumulator += 0.0342866;
          }
        } else {
          if (instance.wholeweight >= 0.61675) {
            accumulator += 0.481939;
          } else {
            accumulator += 0.09369;
          }
        }
      }
    }
  } else {
    if (instance.shellweight >= 0.05875) {
      if (instance.type == FeatureType::kOutOfVocabulary ||
          instance.type == FeatureType::kM ||
          instance.type == FeatureType::kF) {
        if (instance.shuckedweight >= 0.233) {
          if (instance.visceraweight >= 0.1685) {
            accumulator += -0.0248209;
          } else {
            accumulator += -0.193403;
          }
        } else {
          if (instance.shellweight >= 0.11825) {
            accumulator += -0.00385521;
          } else {
            accumulator += -0.10375;
          }
        }
      } else {
        if (instance.shellweight >= 0.112) {
          if (instance.shuckedweight >= 0.217) {
            accumulator += -0.194425;
          } else {
            accumulator += -0.105962;
          }
        } else {
          if (instance.shellweight >= 0.06875) {
            accumulator += -0.245637;
          } else {
            accumulator += -0.300007;
          }
        }
      }
    } else {
      if (instance.shellweight >= 0.0265) {
        if (instance.diameter >= 0.2225) {
          if (instance.type == FeatureType::kOutOfVocabulary ||
              instance.type == FeatureType::kM) {
            accumulator += -0.170084;
          } else {
            accumulator += -0.31625;
          }
        } else {
          if (instance.shuckedweight >= 0.058) {
            accumulator += -0.434957;
          } else {
            accumulator += -0.364538;
          }
        }
      } else {
        if (instance.visceraweight >= 0.01025) {
          if (instance.shuckedweight >= 0.02325) {
            accumulator += -0.466778;
          } else {
            accumulator += -0.413043;
          }
        } else {
          if (instance.diameter >= 0.1025) {
            accumulator += -0.527219;
          } else {
            accumulator += -0.666359;
          }
        }
      }
    }
  }

  // Tree #2
  if (instance.shellweight >= 0.15375) {
    if (instance.shellweight >= 0.3545) {
      if (instance.shuckedweight >= 0.552) {
        if (instance.shellweight >= 0.56875) {
          if (instance.shuckedweight >= 0.77) {
            accumulator += 0.252696;
          } else {
            accumulator += 0.591352;
          }
        } else {
          if (instance.shellweight >= 0.4445) {
            accumulator += 0.181162;
          } else {
            accumulator += 0.0831095;
          }
        }
      } else {
        if (instance.shellweight >= 0.414) {
          if (instance.wholeweight >= 1.40125) {
            accumulator += 0.633271;
          } else {
            accumulator += 0.418284;
          }
        } else {
          if (instance.shuckedweight >= 0.42525) {
            accumulator += 0.146606;
          } else {
            accumulator += 0.44689;
          }
        }
      }
    } else {
      if (instance.shellweight >= 0.2395) {
        if (instance.shuckedweight >= 0.34475) {
          if (instance.shuckedweight >= 0.44375) {
            accumulator += 0.00736695;
          } else {
            accumulator += 0.105116;
          }
        } else {
          if (instance.diameter >= 0.4275) {
            accumulator += 0.179296;
          } else {
            accumulator += 0.317869;
          }
        }
      } else {
        if (instance.shuckedweight >= 0.23275) {
          if (instance.height >= 0.1525) {
            accumulator += 0.070624;
          } else {
            accumulator += -0.0583499;
          }
        } else {
          if (instance.wholeweight >= 0.57275) {
            accumulator += 0.297453;
          } else {
            accumulator += 0.0518753;
          }
        }
      }
    }
  } else {
    if (instance.shellweight >= 0.0475) {
      if (instance.type == FeatureType::kOutOfVocabulary ||
          instance.type == FeatureType::kM ||
          instance.type == FeatureType::kF) {
        if (instance.shuckedweight >= 0.233) {
          if (instance.visceraweight >= 0.15125) {
            accumulator += -0.0838989;
          } else {
            accumulator += -0.197271;
          }
        } else {
          if (instance.diameter >= 0.3075) {
            accumulator += -0.0222674;
          } else {
            accumulator += -0.120292;
          }
        }
      } else {
        if (instance.shellweight >= 0.112) {
          if (instance.shuckedweight >= 0.21625) {
            accumulator += -0.199929;
          } else {
            accumulator += -0.123039;
          }
        } else {
          if (instance.shellweight >= 0.06875) {
            accumulator += -0.221073;
          } else {
            accumulator += -0.26881;
          }
        }
      }
    } else {
      if (instance.shellweight >= 0.02175) {
        if (instance.shellweight >= 0.0395) {
          if (instance.shuckedweight >= 0.046) {
            accumulator += -0.30408;
          } else {
            accumulator += -0.152861;
          }
        } else {
          if (instance.visceraweight >= 0.01375) {
            accumulator += -0.350878;
          } else {
            accumulator += -0.253653;
          }
        }
      } else {
        if (instance.wholeweight >= 0.02325) {
          if (instance.shellweight >= 0.01525) {
            accumulator += -0.415872;
          } else {
            accumulator += -0.457507;
          }
        } else {
          if (instance.diameter >= 0.1025) {
            accumulator += -0.516069;
          } else {
            accumulator += -0.599723;
          }
        }
      }
    }
  }

  return accumulator;
}

}  // namespace ydf_model
#endif
